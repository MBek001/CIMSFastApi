# -----------------------------------------------------
# HTTP (port 80): redirect all traffic to HTTPS
# and handle Let's Encrypt challenge
# -----------------------------------------------------
server {
    listen 80;
    server_name cims.cognilabs.org 209.38.209.183;

    # Allow Let's Encrypt to verify domain ownership
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# -----------------------------------------------------
# HTTPS (port 443): proxy requests to FastAPI
# -----------------------------------------------------
server {
    listen 443 ssl;
    http2 on;
    server_name cims.cognilabs.org 209.38.209.183;

    # SSL certificate paths (Certbot auto-populates these)
    ssl_certificate /etc/letsencrypt/live/cims.cognilabs.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cims.cognilabs.org/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/cims.cognilabs.org/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Proxy all traffic to FastAPI
    location / {
        proxy_pass http://web:8000;   # ðŸ”¥ match your service name & internal port
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: enable CORS headers if using frontend separately
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        if ($request_method = OPTIONS) {
            return 204;
        }
    }
}
